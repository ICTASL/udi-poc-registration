spring.cloud.config.uri=http://localhost:51000
spring.cloud.config.label=1.1.5-drp-mosip-config
spring.application.name=registration-processor,application
spring.profiles.active=mz
spring.cloud.config.name=registration-processor
config.server.file.storage.uri=${spring.cloud.config.uri}/${packet.info.storage.service}/${spring.profiles.active}/${spring.cloud.config.label}/
management.endpoints.web.exposure.include=refresh
registration.processor.zone=mz
#vertx.cluster.configuration=${spring.cloud.config.uri}/*/${spring.profiles.active}/${spring.cloud.config.label}/hazelcast_${registration.processor.zone}.xml
vertx.cluster.configuration=${spring.cloud.config.uri}/hazelcast/${spring.profiles.active}/${spring.cloud.config.label}/hazelcast_${registration.processor.zone}-${spring.profiles.active}.xml
#management.security.enabled=false
#disabling health check so that client doesnt try to load properties from sprint config server every
# 5 minutes (should not be done in production)
health.config.enabled=false
eventbus.port=5736
server.port=8095
server.servlet.path=/registrationprocessor/v1/external
#Kafka event bus configruations
mosip.regproc.eventbus.kafka.commit.type=${mosip.regproc.external.eventbus.kafka.commit.type}
mosip.regproc.eventbus.kafka.max.poll.records=${mosip.regproc.external.eventbus.kafka.max.poll.records}
mosip.regproc.eventbus.kafka.poll.frequency=${mosip.regproc.external.eventbus.kafka.poll.frequency}
mosip.regproc.eventbus.kafka.group.id=${mosip.regproc.external.eventbus.kafka.group.id}